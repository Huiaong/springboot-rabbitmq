<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huiaong.normal.trade.impl.dao.BrokerMessageLogDao">
    <resultMap type="com.huiaong.normal.trade.mq.model.BrokerMessageLog" id="BrokerMessageLogMap">
        <id property="id" column="id"/>
        <result property="message_id" column="messageId"/>
        <result property="message" column="message"/>
        <result property="try_count" column="tryCount"/>
        <result property="status" column="status"/>
        <result property="next_retry" column="nextRetry"/>
        <result property="create_time" column="createTime"/>
        <result property="update_time" column="updateTime"/>
    </resultMap>

    <sql id="tb">
        `broker_message_log`
    </sql>

    <sql id="cols_exclude_id">
        message_id, message, try_count, status, next_retry,
        create_time, update_time
    </sql>

    <sql id="cols">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="criteria">
        <if test="id != null">and id = #{id}</if>
        <if test="messageId != null">and message_id = #{messageId}</if>
        <if test="message != null">and message = #{message}</if>
        <if test="tryCount != null">and try_count = #{tryCount}</if>
        <if test="status != null">and status = #{status}</if>
        <if test="nextRetry != null">and next_retry = #{nextRetry}</if>
    </sql>

    <sql id="values">
        #{messageId}, #{message}, #{tryCount}, #{status}, #{nextRetry},
         now(), now()
    </sql>

    <select id="findById" parameterType="long" resultMap="BrokerMessageLogMap">
        select <include refid="cols"/>
        from <include refid="tb"/>
        where id = #{id}
    </select>


    <select id="findByMessageId" parameterType="string" resultMap="BrokerMessageLogMap">
        select <include refid="cols"/>
        from <include refid="tb"/>
        where message_id = #{messageId}
    </select>

    <select id="findByCriteria" parameterType="map" resultMap="BrokerMessageLogMap">
        select <include refid="cols"/>
        from <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <update id="update" parameterType="com.huiaong.normal.trade.mq.model.BrokerMessageLog">
        update <include refid="tb"/>
        <set>
            <if test="tryCount != null">try_count = #{tryCount},</if>
            <if test="status != null">status = #{status},</if>
            <if test="nextRetry != null">next_retry = #{nextRetry},</if>
            updated_at=now()
        </set>
        where id = #{id}
    </update>

    <insert id="create" parameterType="com.huiaong.normal.trade.mq.model.BrokerMessageLog" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="values" />)
    </insert>
</mapper>